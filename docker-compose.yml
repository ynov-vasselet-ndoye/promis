version: "3"
services:
  back:
    container_name: backend
    build:
      context: ./backend
    restart: unless-stopped
    env_file: ./backend/.env
    environment:
      - DATABASE_CLIENT=${DATABASE_CLIENT}
      - DATABASE_HOST=${DATABASE_HOST}
      - DATABASE_NAME=${DATABASE_NAME}
      - DATABASE_USERNAME=${DATABASE_USERNAME}
      - DATABASE_PORT=${DATABASE_PORT}
      - JWT_SECRET=${JWT_SECRET}
      - ADMIN_JWT_SECRET=${ADMIN_JWT_SECRET}
      - DATABASE_PASSWORD=${DATABASE_PASSWORD}
      - NODE_ENV=${NODE_ENV}

    volumes:
        - ./backend/config:/app/backend/app/config
        - ./backend/src:/app/backend/src
        - ./backend/package.json:/app/backend/package.json
        - ./backend/package-lock.json:/app/backend/package-lock.json
        - ./backend/.env:/app/backend/.env
    ports:
      - "1338:1338"
    networks:
      - strapi
    depends_on:
      - strapiDB

  front:
    build:
      context: ./frontend
    platform: linux/amd64 #for platform error on Apple M1 chips
    ports:
      - "3000:3000"

  strapiDB:
    image: postgres:12.0-alpine
    container_name: strapi_promis_db
    platform: linux/amd64 #for platform error on Apple M1 chips
    restart: unless-stopped
    env_file: ./backend/.env
    environment:
      POSTGRES_USER: ${DATABASE_USERNAME}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_DB: ${DATABASE_NAME}
    volumes:
      - strapi-data:/var/lib/postgresql/data/ #using a volume
      #- ./data:/var/lib/postgresql/data/ # if you want to use a bind folder
    ports:
      - "5432:5432"
    networks:
      - strapi

volumes:
  strapi-data:
  backend:
  frontend:

networks:
  strapi:
    driver: bridge
