name: Backend CI

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - 'backend/**'
      - '.github/workflows/backend.yml'

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 8

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js 18.9.0
        uses: actions/setup-node@v4
        with:
          node-version: '18.x'

      - name: Create .env file
        run: |
          echo DATABASE_CLIENT=${{ secrets.DATABASE_CLIENT }} >> $GITHUB_WORKSPACE/backend/.env
          echo DATABASE_HOST=${{ secrets.DATABASE_HOST }} >> $GITHUB_WORKSPACE/backend/.env
          echo DATABASE_NAME=${{ secrets.DATABASE_NAME }} >> $GITHUB_WORKSPACE/backend/.env
          echo DATABASE_USERNAME=${{ secrets.DATABASE_USERNAME }} >> $GITHUB_WORKSPACE/backend/.env
          echo DATABASE_PORT=5432 >> $GITHUB_WORKSPACE/backend/.env
          echo JWT_SECRET=${{ secrets.JWT_SECRET }} >> $GITHUB_WORKSPACE/backend/.env
          echo ADMIN_JWT_SECRET=${{ secrets.ADMIN_JWT_SECRET }} >> $GITHUB_WORKSPACE/backend/.env
          echo DATABASE_PASSWORD=${{ secrets.DATABASE_PASSWORD }} >> $GITHUB_WORKSPACE/backend/.env
          echo NODE_ENV=${{ secrets.NODE_ENV }} >> $GITHUB_WORKSPACE/backend/.env

      - name: Install dependencies
        run: yarn
        working-directory: ./backend

      - name: Build strapi admin panel
        run: yarn build
        working-directory: ./backend

      - name: Check strapi build
        run: ls backend/build

  sonar_scan:
    name: SonarQube Scan
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Set up SonarQube
        uses: actions/setup-java@v1
        with:
          java-version: '8'
      - name: Install SonarQube Scanner
        uses: SonarSource/sonarcloud-github-action@master
        with:
          args: \
            -Dsonar.qualitygate.wait=false \
            -Dsonar.projectKey="a33e3185e6447ef9807ea915dbb959e818df99ed" \
            -Dsonar.sources="./backend" \
            -Dsonar.exclusions="**/*.xml"
      - name: Scan
        uses: SonarSource/sonarcloud-github-action@master
        with:
          args: \
            -Dsonar.qualitygate.wait=false \
            -Dsonar.projectKey="a33e3185e6447ef9807ea915dbb959e818df99ed" \
            -Dsonar.sources="./backend" \
            -Dsonar.exclusions="**/*.xml"
      - name: Publish SonarQube report
        uses: actions/cache@v2
        with:
          path: ~/.sonar/cache
